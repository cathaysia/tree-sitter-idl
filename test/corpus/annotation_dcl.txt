========================================
annotation_dcl
========================================

@annotation A {};

@annotation A {
    any a;
    long b;
};

@DDSService
interface A {};

@data_representation(XCDR | XCDR2)
struct HelloWorld: Parent {
    @key @optional string a[20];
    wstring b;
};

@bit_bound(32)
bitmask DataRepresentationMask {
    @position(0) XCDR1,
    @position(1) XML,
    @posiiton(2) XCDR2
};

---

(specification
  (definition
    (annotation_dcl
      (identifier)))
  (definition
    (annotation_dcl
      (identifier)
      (annotation_body
        (annotation_member
          (annotation_member_type
            (any_const_type))
          (simple_declarator
            (identifier))))
      (annotation_body
        (annotation_member
          (annotation_member_type
            (const_type
              (integer_type
                (signed_int
                  (signed_long_int)))))
          (simple_declarator
            (identifier))))))
  (definition
    (interface_dcl
      (annotation_appl
        (annotation_appl_custom_body
          (scoped_name
            (identifier))))
      (interface_def
        (interface_header
          (interface_kind)
          (identifier)))))
  (definition
    (type_dcl
      (annotation_appl
        (annotation_appl_builtin_body
          (annotation_appl_data_representation
            (anno_name)
            (data_representation_mask)
            (data_representation_mask))))
      (constr_type_dcl
        (struct_dcl
          (struct_def
            (identifier)
            (scoped_name
              (identifier))
            (member
              (annotation_appl
                (annotation_appl_builtin_body
                  (annotation_appl_key
                    (anno_name))))
              (annotation_appl
                (annotation_appl_builtin_body
                  (annotation_appl_optional
                    (anno_name))))
              (type_spec
                (template_type_spec
                  (string_type)))
              (declarators
                (declarator
                  (array_declarator
                    (identifier)
                    (fixed_array_size
                      (positive_int_const
                        (const_expr
                          (or_expr
                            (xor_expr
                              (and_expr
                                (shift_expr
                                  (add_expr
                                    (mult_expr
                                      (unary_expr
                                        (primary_expr
                                          (literal
                                            (integer_literal
                                              (dec_number))))))))))))))))))
            (member
              (type_spec
                (template_type_spec
                  (wide_string_type)))
              (declarators
                (declarator
                  (simple_declarator
                    (identifier))))))))))
  (definition
    (type_dcl
      (annotation_appl
        (annotation_appl_builtin_body
          (annotation_appl_bit_bound
            (anno_name)
            (integer_literal
              (dec_number)))))
      (constr_type_dcl
        (bitmask_dcl
          (identifier)
          (bit_value
            (annotation_appl
              (annotation_appl_builtin_body
                (annotation_appl_position
                  (anno_name)
                  (integer_literal
                    (dec_number)))))
            (identifier))
          (bit_value
            (annotation_appl
              (annotation_appl_builtin_body
                (annotation_appl_position
                  (anno_name)
                  (integer_literal
                    (dec_number)))))
            (identifier))
          (bit_value
            (annotation_appl
              (annotation_appl_custom_body
                (scoped_name
                  (identifier))
                (annotation_appl_params
                  (const_expr
                    (or_expr
                      (xor_expr
                        (and_expr
                          (shift_expr
                            (add_expr
                              (mult_expr
                                (unary_expr
                                  (primary_expr
                                    (literal
                                      (integer_literal
                                        (dec_number)))))))))))))))
            (identifier)))))))
