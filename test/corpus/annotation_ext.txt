========================================
annotation_ext
========================================

//@Custom @DataRepresentationMask(CDR|PL_CDR)
struct HelloWorld {
    u8 a; //@key @name(name="a")
    u16 b[10]; //@key
    string c[10][20]; //@key
    sequence<u8> c;
    string<20> d;
    wstring<20> d;
    fixed<1,2> d;
    any d;
};//@Custom(a=1)

---

(specification
  (comment
    (annotation_appl
      (scoped_name
        (identifier)))
    (annotation_appl
      (scoped_name
        (identifier))
      (annotation_appl_params
        (const_expr
          (or_expr
            (or_expr
              (xor_expr
                (and_expr
                  (shift_expr
                    (add_expr
                      (mult_expr
                        (unary_expr
                          (scoped_name
                            (identifier)))))))))
            (xor_expr
              (and_expr
                (shift_expr
                  (add_expr
                    (mult_expr
                      (unary_expr
                        (scoped_name
                          (identifier)))))))))))))
  (definition
    (struct_def
      (identifier)
      (member
        (type_spec
          (simple_type_spec
            (scoped_name
              (identifier))))
        (declarators
          (declarator
            (simple_declarator
              (identifier)))))
      (comment
        (annotation_appl
          (annotation_built_name))
        (annotation_appl
          (scoped_name
            (identifier))
          (annotation_appl_params
            (annotation_appl_param
              (identifier)
              (const_expr
                (or_expr
                  (xor_expr
                    (and_expr
                      (shift_expr
                        (add_expr
                          (mult_expr
                            (unary_expr
                              (literal
                                (string_literal
                                  (string_content)))))))))))))))
      (member
        (type_spec
          (simple_type_spec
            (scoped_name
              (identifier))))
        (declarators
          (declarator
            (array_declarator
              (identifier)
              (fixed_array_size
                (positive_int_const
                  (const_expr
                    (or_expr
                      (xor_expr
                        (and_expr
                          (shift_expr
                            (add_expr
                              (mult_expr
                                (unary_expr
                                  (literal
                                    (number_literal))))))))))))))))
      (comment
        (annotation_appl
          (annotation_built_name)))
      (member
        (type_spec
          (template_type_spec
            (string_type)))
        (declarators
          (declarator
            (array_declarator
              (identifier)
              (fixed_array_size
                (positive_int_const
                  (const_expr
                    (or_expr
                      (xor_expr
                        (and_expr
                          (shift_expr
                            (add_expr
                              (mult_expr
                                (unary_expr
                                  (literal
                                    (number_literal))))))))))))
              (fixed_array_size
                (positive_int_const
                  (const_expr
                    (or_expr
                      (xor_expr
                        (and_expr
                          (shift_expr
                            (add_expr
                              (mult_expr
                                (unary_expr
                                  (literal
                                    (number_literal))))))))))))))))
      (comment
        (annotation_appl
          (annotation_built_name)))
      (member
        (type_spec
          (template_type_spec
            (sequence_type
              (type_spec
                (simple_type_spec
                  (scoped_name
                    (identifier)))))))
        (declarators
          (declarator
            (simple_declarator
              (identifier)))))
      (member
        (type_spec
          (template_type_spec
            (string_type
              (positive_int_const
                (const_expr
                  (or_expr
                    (xor_expr
                      (and_expr
                        (shift_expr
                          (add_expr
                            (mult_expr
                              (unary_expr
                                (literal
                                  (number_literal))))))))))))))
        (declarators
          (declarator
            (simple_declarator
              (identifier)))))
      (member
        (type_spec
          (template_type_spec
            (string_type
              (positive_int_const
                (const_expr
                  (or_expr
                    (xor_expr
                      (and_expr
                        (shift_expr
                          (add_expr
                            (mult_expr
                              (unary_expr
                                (literal
                                  (number_literal))))))))))))))
        (declarators
          (declarator
            (simple_declarator
              (identifier)))))
      (member
        (type_spec
          (template_type_spec
            (fixed_pt_type
              (positive_int_const
                (const_expr
                  (or_expr
                    (xor_expr
                      (and_expr
                        (shift_expr
                          (add_expr
                            (mult_expr
                              (unary_expr
                                (literal
                                  (number_literal)))))))))))
              (positive_int_const
                (const_expr
                  (or_expr
                    (xor_expr
                      (and_expr
                        (shift_expr
                          (add_expr
                            (mult_expr
                              (unary_expr
                                (literal
                                  (number_literal))))))))))))))
        (declarators
          (declarator
            (simple_declarator
              (identifier)))))
      (member
        (type_spec
          (simple_type_spec
            (base_type_spec
              (any_type))))
        (declarators
          (declarator
            (simple_declarator
              (identifier)))))))
  (comment
    (annotation_appl
      (scoped_name
        (identifier))
      (annotation_appl_params
        (annotation_appl_param
          (identifier)
          (const_expr
            (or_expr
              (xor_expr
                (and_expr
                  (shift_expr
                    (add_expr
                      (mult_expr
                        (unary_expr
                          (literal
                            (number_literal)))))))))))))))
